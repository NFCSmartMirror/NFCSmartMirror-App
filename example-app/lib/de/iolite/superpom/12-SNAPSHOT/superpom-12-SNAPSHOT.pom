<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<prerequisites>
		<maven>2.2.1</maven>
	</prerequisites>

	<groupId>de.iolite</groupId>
	<artifactId>superpom</artifactId>
	<version>12-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>IOLITE Super POM</name>
	<description>The super POM to be used by all IOLITE modules. Provides basic plugin configurations to ensure a least build consistency.
	</description>
	<inceptionYear>2014</inceptionYear>
	<organization>
		<name>IOLITE GmbH</name>
		<url>http://iolite.de</url>
	</organization>

	<scm>
		<connection>scm:git:git@iolite.aot.tu-berlin.de:iolite/build.git</connection>
		<developerConnection>scm:git:git@iolite.aot.tu-berlin.de:iolite/build.git</developerConnection>
		<url>https://iolite.aot.tu-berlin.de/iolite/build/</url>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<!-- avoid use of local platform encoding by setting a preferred one, i.e. UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- SLF4J version -->
		<slf4j.version>1.7.21</slf4j.version>
	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>iolite-snapshots</id>
			<name>IOLITE Snapshots</name>
			<url>https://web.iolite.de/nexus/content/repositories/iolite-snapshots/</url>
			<snapshots />
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>dai-releases</id>
			<name>DAI Releases</name>
			<url>http://repositories.dai-labor.de/nexus/content/repositories/dai-releases/</url>
		</repository>
		<snapshotRepository>
			<id>iolite-snapshots</id>
			<name>IOLITE Snapshots</name>
			<url>https://web.iolite.de/nexus/content/repositories/iolite-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<!-- inherited build dependencies, preferably use only for specific test dependencies -->
	<dependencyManagement>
		<dependencies>
			<!-- Testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>3.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.1.7</version>
			</dependency>

			<!-- Apache Commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.5</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.5</version>
			</dependency>

			<!-- JSON -->
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20160810</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- FindBugs annotations, e.g. for warning suppression in generated code -->
		<dependency>
			<groupId>com.nesscomputing.testing</groupId>
			<artifactId>findbugs-annotations</artifactId>
			<version>2.0.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- JSR305 is a FindBugs dependency but the annotations have RUNTIME retention. Thus we need to overwrite 'provided' scope
			of FindBugs -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.1</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.1</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<!-- only show warnings and errors -->
									<quiet>true</quiet>
									<!-- in case of OutOfMemory-issues, use more than given by default -->
									<maxmemory>512m</maxmemory>
									<!-- tell javadoc some tags used by emf -->
									<additionalJOptions>
										<additionalJOption>-tag generated</additionalJOption>
										<additionalJOption>-tag ordered</additionalJOption>
										<additionalJOption>-tag model</additionalJOption>
									</additionalJOptions>
									<!-- Current link to the JavaSE API docs. Java 1.8 until exclusively 1.8_u20 has a bug, i.e. might requires at least
										Java 1.8_u20 or older versions e.g. 1.7 -->
									<links>
										<link>http://download.oracle.com/javase/7/docs/api/</link>
									</links>
									<!-- Prevent java 8's compiler from failing due to JavaDoc errors. -->
									<additionalparam>-Xdoclint:none</additionalparam>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>javadoc-for-java7-and-below</id>
			<activation>
				<jdk>(,1.8)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.1</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<!-- only show warnings and errors -->
									<quiet>true</quiet>
									<!-- in case of OutOfMemory-issues, use more than given by default -->
									<maxmemory>512m</maxmemory>
									<!-- tell javadoc some tags used by emf -->
									<additionalJOptions>
										<additionalJOption>-tag generated</additionalJOption>
										<additionalJOption>-tag ordered</additionalJOption>
										<additionalJOption>-tag model</additionalJOption>
									</additionalJOptions>
									<!-- Current link to the JavaSE API docs. Java 1.8 until exclusively 1.8_u20 has a bug, i.e. might requires at least
										Java 1.8_u20 or older versions e.g. 1.7 -->
									<links>
										<link>http://download.oracle.com/javase/7/docs/api/</link>
									</links>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>medium-code-validation</id>
			<activation>
				<file>
					<exists>medium-code-validation</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<!-- Make Checkstyle fail on error priority violations -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<configuration>
							<failsOnError>true</failsOnError>
							<violationSeverity>error</violationSeverity>
						</configuration>
					</plugin>

					<!-- Make Findbugs fail on Medium priority violations -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<configuration>
							<!-- Values are 'Low', 'Medium' and 'High'. 'Low' reports all bugs, 'High' reports only most critical bugs -->
							<threshold>Medium</threshold>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>low-code-validation</id>
			<activation>
				<file>
					<exists>low-code-validation</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<!-- Make Checkstyle not fail at all -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<configuration>
							<failsOnError>false</failsOnError>
							<failOnViolation>false</failOnViolation>
						</configuration>
					</plugin>

					<!-- Make Findbugs fail only on High priority violations -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<configuration>
							<!-- Values are 'Low', 'Medium' and 'High'. 'Low' reports all bugs, 'High' reports only most critical bugs -->
							<threshold>High</threshold>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-release-plugin</artifactId>
				<!-- version 2.5.1 least required for windows git users! -->
				<version>2.5.1</version>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<!-- disable reusing of forks so that static initialization of one test does not interfere the execution of another
						one -->
					<reuseForks>false</reuseForks>
				</configuration>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.eclipse.pde.PluginNature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.eclipse.pde.ManifestBuilder</buildcommand>
						<buildcommand>org.eclipse.pde.SchemaBuilder</buildcommand>
					</additionalBuildcommands>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.pde.core.requiredPlugins</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>

			<!-- ensure test classes are deployed with every release -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- just for build consistency -->
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
			</plugin>
			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>

			<!-- FindBugs check on compile, fail even on Low priority violations -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.3</version>

				<!-- plugin configuration defaults to 'pedantic' and is partially overridden by the validation profiles -->
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If you run out of memory, changes the value of the
						effort element to 'Low'. -->
					<effort>Max</effort>
					<!-- Values are 'Low', 'Medium' and 'High'. 'Low' reports all bugs, 'High' reports only most critical bugs -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
					<!-- Configures the directory in which the XML report is created -->
					<findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
				</configuration>
				<executions>
					<!-- Ensures that FindBugs inspects source code when project is compiled. -->
					<execution>
						<id>analyze-compile</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Cobertura for coverage testing -->
			<!-- Set individual thresholds in each module -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<maxmem>128m</maxmem>
					<check>
						<!-- Fails build if coverage is below set threshold -->
						<haltOnFailure>true</haltOnFailure>
						<!-- branchRate>85</branchRate -->
						<!-- lineRate>85</lineRate -->
						<totalBranchRate>0</totalBranchRate>
						<totalLineRate>0</totalLineRate>
						<!-- packageLineRate>85</packageLineRate -->
						<!-- packageBranchRate>85</packageBranchRate -->
					</check>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>clean</goal>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Make Checkstyle fail at warnings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<dependencies>
					<dependency>
						<groupId>de.iolite.build</groupId>
						<artifactId>checkstyle-resources</artifactId>
						<version>0.1-SNAPSHOT</version>
					</dependency>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>7.1</version>
					</dependency>
				</dependencies>

				<!-- plugin configuration defaults to 'pedantic' and is partially overridden by the validation profiles -->
				<configuration>
					<configLocation>de/iolite/build/checkstyle/iolite-configuration.xml</configLocation>
					<encoding>UTF-8</encoding>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<failOnViolation>true</failOnViolation>
					<violationSeverity>warning</violationSeverity>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
				</configuration>

				<executions>
					<execution>
						<id>validate</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
